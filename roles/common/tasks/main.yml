---

#
#	Ansible first pass setup
#
- name: Install Ansible dependencies
  opkg: 
    state: installed
    pkg: "{{ item }}"
  with_flattened:
    - python-pkgutil
    - python-distutils
  tags: setup

- name: /var/config/ansible
  file:
    name: /var/config/ansible
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: setup

- name: /var/config/ansible/dirs
  file:
    name: "/var/config/ansible/{{ item }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  with_flattened:
    - facts.d
  tags: setup

- name: Point /etc/ansible at /var/config/ansible
  file:
    name: /etc/ansible
    state: link
    src: /var/config/ansible
  tags: setup

- name: Install lora.fact
  copy:
    src: lora.fact
    dest: /var/config/ansible/facts.d/
    mode: "0755"
    owner: root
    group: root
  tags: setup

- name: Reload ansible_local
  setup: filter=ansible_local
  tags: setup

#
#	Set hostname
#
- name: Set /etc/hostname
  copy:
    dest: /etc/hostname
    content: "{{ hostname }}"
    mode: "0644"
    owner: root
    group: root
  tags: hostname
  notify: Set hostname

#
#	Set timezone and time
#
- name: Set the timezone
  file:
    name: /etc/localtime
    state: link
    force: yes
    src: "/usr/share/zoneinfo/{{ timezone }}"
  tags: time

- name: Set time from ntp server
  shell: "ntpdate {{ ntp_servers[0] }} && hwclock -wu"
  tags: time

#
#	Set root authorized keys
#
- name: Create root .ssh dir
  file:
    dest: ~root/.ssh
    state: directory
    mode: "0700"
    owner: root
    group: root
  tags: users

- name: Install root authorized keys
  copy:
    dest: ~root/.ssh/authorized_keys
    src: authorized_keys
    mode: "0600"
    owner: root
    group: root
  tags: users

#
#	Create ttn user
#
- name: Set up ttn user
  user:
    name: ttn
    append: yes
    groups: adm,plugdev,sudo
    shell: /bin/bash
    password: "*"
  tags: users

- name: Create ttn .ssh dir
  file:
    dest: ~ttn/.ssh
    state: directory
    mode: "0700"
    owner: ttn
    group: ttn
  tags: users

- name: Install ttn authorized keys
  copy:
    dest: ~ttn/.ssh/authorized_keys
    src: authorized_keys
    mode: "0600"
    owner: ttn
    group: ttn
  tags: users

#
#	Secure ssh
#

# XXX - This is harsh, do we want to do this?  Maybe only when ttn user exists?
#- name: Disallow password authentication
#  lineinfile: dest=/etc/ssh/sshd_config
#    regexp="^PasswordAuthentication"
#    line="PasswordAuthentication no"
#    state=present
#  notify: Restart ssh
#  tags: sshd

- name: Disallow root SSH access
  lineinfile: dest=/etc/ssh/sshd_config
    regexp="^PermitRootLogin"
    line="PermitRootLogin prohibit-password"
    state=present
  notify: Restart ssh
  tags: sshd

#
#	Setup local config stuff
#
- name: /var/config/local
  file:
    name: /var/config/local
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: localtree

- name: /var/config/local/tree
  file:
    name: "/var/config/local/{{ item }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  with_flattened:
    - bin
    - lib
    - sbin
    - share
  tags: localtree

- name: Point /usr/local at /var/config/local
  file:
    name: /usr/local
    state: link
    src: /var/config/local
  tags: localtree

#
#	Remove Multi-Tech stuff that we don't want and install the TTN poly-packet-forwarder
#
- name: Remove Multi-Tech lora-network-server
  opkg:
    name: lora-network-server
    state: absent
  tags: forwarder

- name: Copy over poly-packet-forwarder
  copy:
    src: "{{ poly_version }}"
    dest: "/var/tmp/{{ poly_version }}"
  tags: forwarder

- name: Install poly-packet-forwarder
  shell: "opkg install /var/tmp/{{ poly_version }}"
  tags: forwarder

- name: Override /etc/init.d/ttn-pkt-forwarder
  copy:
    src: ttn-pkt-forwarder
    dest: /etc/init.d/
    mode: "0755"
    owner: root
    group: root
  tags: forwarder
    
- name: Clean up poly-packet-forwarder crud
  file:
    name: /var/config/lora/local_conf.json-opkg
    state: absent
  tags: forwarder

#
#	Install the TTN config files
#
- name: Lora dir
  file:
    name: /var/config/lora
    mode: "0755"
    owner: root
    group: root
  tags: loraconfig

- name: /var/config/lora/local_conf.json
  template:
    src: local_conf.json.j2
    dest: /var/config/lora/local_conf.json
    mode: "0644"
    owner: root
    group: root
  tags: loraconfig
    
- name: /var/config/lora/ttn_global_conf.json
  copy:
    src: "{{ region }}-global_conf.json"
    dest: /var/config/lora/ttn_global_conf.json
    mode: "0644"
    owner: root
    group: root
  tags: loraconfig

- name: Merge multitech_overrides in global_conf.json
  shell: node /opt/lora/merge.js /var/config/lora/ttn_global_conf.json /var/config/lora/multitech_overrides.json /var/config/lora/global_conf.json
  notify: restart ttn-pkt-forwarder
  tags: loraconfig

#
#	Install additional ca-certificates
#	XXX - wget needs #	--ca-certificate=/etc/ssl/certs/ca-certificate.crt to work???
#
- name: Local certs directory
  file:
    dest: /usr/local/share/ca-certificates
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: ca-certificates

- name: "Install Let's Encrypt root cert"
  copy:
    dest: /usr/local/share/ca-certificates/lets-encrypt-x3-cross-signed.crt
    src: "{{ item }}"
    mode: "0644"
    owner: root
    group: root
  with_flattened:
    - lets-encrypt-x3-cross-signed.pem
  notify: update-ca-certificates
  tags: ca-certificates

    
