---

#
# Register gateway with TTNv3
#

- name: ttnv3 | Register the gateway
  delegate_to: 127.0.0.1
  ansible.builtin.command: |
    bin/register
    --json
    --id {{ lora_hostname }}
    --eui {{ ansible_local.lora.eui }}
    --region {{ region }}
    {{ '--latitude ' + latitude | string if latitude is defined and latitude else '' }}
    {{ '--longitude ' + longitude | string if longitude is defined and longitude else '' }}
    {{ '--altitude ' + altitude | string if altitude is defined and altitude else '' }}
    {{ '--update-location-from-status' if use_gps and have_gps else '' }}
    {{ '--status-public' if status_public else '--status-private' }}
    {{ '--location-public' if location_public else '--location-private' }}
    --router {{ router_v3 }}
    --description {{ description | quote }}
    --brand {{ gateway_brand | quote }}
    --model {{ gateway_model | quote }}
    --antenna-type {{ antenna_type | quote }}
    --antenna-model {{ antenna_model | quote }}
    {{ gateway_owner }}
    --collaborators '{{ gateway_collaborators_list | flatten | to_json }}'
  changed_when: true
  throttle: 1
  register: conduit_register_output

- name: ttnv3 | Set the gateway_info fact
  ansible.builtin.set_fact:
    conduit_gateway_info: "{{ conduit_register_output.stdout | from_json }}"
  when: forwarder_variant == 'mp'

- name: ttnv3 | Set Some facts
  ansible.builtin.set_fact:
    conduit_gw_router: "{{ conduit_gateway_info.gateway_server_address }}"
  when: forwarder_variant == 'mp'

- name: ttnv3 | Read local_conf and parse out gw_key
  when: forwarder_variant != "basic"
  block:
    - name: ttnv3 | Slurp local_config.json
      ansible.builtin.slurp: # noqa: ignore-errors
        src: /var/config/lora/local_conf.json
      register: conduit_local_conf_b64
      ignore_errors: true
    - name: ttnv3 | Fact local_conf
      ansible.builtin.set_fact: # noqa: ignore-errors
        conduit_local_conf: "{{ conduit_local_conf_b64.content | b64decode | from_json }}"
      ignore_errors: true
      when: conduit_local_conf_b64 is succeeded
    - name: ttnv3 | Fact gw_key
      ansible.builtin.set_fact:
        conduit_gw_key: "{{ conduit_local_conf.gateway_conf.servers[0].serv_gw_key }}"
      when:
        - conduit_local_conf is defined
        - "'gateway_conf' in conduit_local_conf"
        - "'servers' in conduit_local_conf.gateway_conf"
        - "'serv_gw_key' in conduit_local_conf.gateway_conf.servers[0]"
        - conduit_local_conf.gateway_conf.servers[0].serv_gw_key.startswith("NNSXS.")

- name: ttnv3 | Read tc.key and parse out gw_key
  when: forwarder_variant.startswith("basic")
  block:
    - name: ttnv3 | Slurp tc.key
      ansible.builtin.slurp:
        src: /var/config/lora/tc.key
      register: conduit_tc_key_b64
      ignore_errors: true
    - name: ttnv3 | Fact gw_key
      ansible.builtin.set_fact: # noqa: ignore-errors
        conduit_gw_key: "{{ conduit_tc_key_b64.content | b64decode | split | last }}"
      ignore_errors: true
      when: conduit_tc_key_b64 is succeeded

- name: ttnv3 | Test key by fetching config
  delegate_to: 127.0.0.1
  ansible.builtin.uri:
    headers:
      Authorization: "Bearer {{ conduit_gw_key }}"
    url: "https://{{ router_v3 }}/api/v3/gcs/gateways/{{ lora_hostname }}/semtechudp/global_conf.json"
    method: GET
  register: conduit_get_config
  ignore_errors: true
  when: conduit_gw_key is defined

- name: ttnv3 | Extract global.conf
  ansible.builtin.set_fact:
    conduit_global_conf: "{{ conduit_get_config.json }}"
  when:
    - conduit_gw_key is defined
    - conduit_get_config is succeeded

- name: ttnv3 | Generate a key if we do not have one
  delegate_to: 127.0.0.1
  ansible.builtin.command: "ttn-lw-cli gateway api-keys create {{ lora_hostname }} --name link --right-gateway-link"
  changed_when: true
  register: conduit_key_data_json
  throttle: 1
  notify: TTNv3 cleanup
  when: conduit_gw_key is not defined or conduit_get_config is failed

- name: ttnv3 | Extract the key and key_id
  when:
    - conduit_gw_key is not defined or conduit_get_config is failed
    - conduit_key_data_json is succeeded
  block:
    - name: ttnv3 | Fact key_data
      ansible.builtin.set_fact:
        conduit_key_data: "{{ conduit_key_data_json.stdout | from_json }}"
    - name: ttnv3 | Fact gw_key, gw_key_id
      ansible.builtin.set_fact:
        conduit_gw_key: "{{ conduit_key_data.key }}"
        conduit_gw_key_id: "{{ conduit_key_data.id }}"

- name: ttnv3 | Get the packet forwarder global config file
  when:
    - conduit_global_conf is not defined
    - forwarder_variant != 'basic'
  block:
    - name: ttnv3 | Fetch global_conf.json
      delegate_to: 127.0.0.1
      ansible.builtin.uri:
        url: "https://{{ router_v3 }}/api/v3/gcs/gateways/{{ lora_hostname }}/semtechudp/global_conf.json"
        method: GET
        headers:
          Authorization: "Bearer {{ conduit_gw_key }}"
      register: conduit_get_config
    - name: ttnv3 | Fact global_conf
      ansible.builtin.set_fact:
        conduit_global_conf: "{{ conduit_get_config.json }}"
...
