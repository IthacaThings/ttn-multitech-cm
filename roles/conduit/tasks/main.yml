---

#
# Build the list of authorized keys
#
- name: main | Build list of authorized keys
  ansible.builtin.import_tasks: authorized_keys.yml
  tags:
    - always

#
# Attempt to bootstrap an unconfigured gateway
#
- name: main | Bootstrap
  ansible.builtin.import_tasks: bootstrap.yml
  tags:
    - bootstrap
    - never

#
#
# Ansible first pass setup
#
- name: main | Ansible setup
  ansible.builtin.import_tasks: ansible.yml
  tags:
    - setup
    - ansible

- name: main | Fail if certain info is missing
  ansible.builtin.fail:
    msg: "Required information is missing"
  when:
    - "'mlinux' not in ansible_local or ansible_local.mlinux|length == 0"

#
# Initial setup.  Stuff required before packages install
#
- name: main | Initial setup
  ansible.builtin.import_tasks: setup.yml
  tags:
    - always

#
#  Set up for preserving config during firmware upgrade
#
- name: main | Preserve config setup
  ansible.builtin.import_tasks: preserve.yml
  tags:
    - setup
    - preserve
    - mlinux

#
# Update mLinux if required
#
- name: main | Upgrade mlinux
  ansible.builtin.import_tasks: mlinux-upgrade.yml
  when:
    - mlinux_version is defined
    - mlinux_version != ansible_local.mlinux.version
    - mlinux_version is version('5.3.0d', '!=') or ansible_local.mlinux.version is version('5.3.0b', '!=')
  tags:
    - setup
    - mlinux

- name: main | Configure mlinux
  ansible.builtin.import_tasks: mlinux.yml
  when:
    - mlinux_version is defined
  tags:
    - setup
    - mlinux

#
# Set up logrotate
#
- name: main | Set up logrotate
  ansible.builtin.import_tasks: logrotate.yml
  tags:
    - logrotate
    - setup

#
# Set up networking
#
- name: main | Setup networking
  ansible.builtin.import_tasks: networking.yml
  tags:
    - networking
    - setup

#
# Set up PPP
#
- name: main | Setup ppp
  ansible.builtin.import_tasks: ppp.yml
  tags:
    - networking
    - ppp
    - setup

#
# Set hostname
#
- name: main | Set hostname
  ansible.builtin.import_tasks: hostname.yml
  tags:
    - hostname
    - setup

#
# Set timezone and time
#
- name: main | Setup time
  ansible.builtin.import_tasks: time.yml
  tags:
    - time
    - setup

#
# Set up user stuff
#
- name: main | Set up users
  ansible.builtin.import_tasks: users.yml
  tags:
    - users
    - setup

#
# Secure ssh
#
- name: main | Set up ssh
  ansible.builtin.import_tasks: sshd.yml
  tags:
    - sshd
    - setup
#
# Stop any services we don't want
#

- name: main | Stop mosquitto
  ansible.builtin.service: name=mosquitto state=stopped
  when: ansible_local.opkg.mosquitto is defined
  ignore_errors: true
  tags:
    - services
    - setup

- name: main | Disable mosquitto
  ansible.builtin.lineinfile: dest=/etc/default/mosquitto
    regexp='^ENABLED='
    line='ENABLED="no"'
    state=present
  when: ansible_local.opkg.mosquitto is defined
  tags:
    - services
    - setup

#
# Set up /usr/local tree
#
- name: main | Set up /usr/local tree
  ansible.builtin.import_tasks: local.yml
  tags:
    - localtree
    - setup

#
# Install and configure TTN packet forwarder
#
- name: main | Set up TTN packet forwarder
  ansible.builtin.import_tasks: ttn.yml
  tags:
    - ttn

#
# Set up ssh_tunnel (autossh)
#
- name: main | Set up ssh_tunnel (autossh)
  ansible.builtin.import_tasks: ssh_tunnel.yml
  tags:
    - ssh_tunnel
    - monit
    - setup

#
# Set up monit
#
- name: main | Set up moniit
  ansible.builtin.import_tasks: monit.yml
  tags:
    - monit
    - setup

#
# Always update system checksum file last
#
- name: main | Schedule update of system checksum file
  delegate_to: 127.0.0.1
  ansible.builtin.command: "true"
  notify: Update system checksum file
  tags:
    - always
