---

#
#	Ansible first pass setup
#
- name: Install Ansible dependencies
  opkg: 
    state: installed
    pkg: "{{ item }}"
  with_flattened:
    - python-pkgutil
    - python-distutils
  tags: setup

- name: /var/config/ansible
  file:
    name: /var/config/ansible
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: setup

- name: /var/config/ansible/dirs
  file:
    name: "/var/config/ansible/{{ item }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  with_flattened:
    - facts.d
  tags: setup

- name: Point /etc/ansible at /var/config/ansible
  file:
    name: /etc/ansible
    state: link
    src: /var/config/ansible
  tags: setup

- name: Install fact scripts
  copy:
    src: "{{ item }}"
    dest: /var/config/ansible/facts.d/
    mode: "0755"
    owner: root
    group: root
  with_flattened:
    - lora.fact
    - conduit.fact
  tags: setup

- name: Reload ansible_local
  setup: filter=ansible_local
  tags: setup

#
#	Set hostname
#
- name: Set /etc/hostname
  copy:
    dest: /etc/hostname
    content: "{{ hostname }}"
    mode: "0644"
    owner: root
    group: root
  tags: hostname
  notify: Set hostname

#
#	Set timezone and time
#
- name: Set the timezone
  file:
    name: /etc/localtime
    state: link
    force: yes
    src: "/usr/share/zoneinfo/{{ timezone }}"
  tags: time

- name: Set time from ntp server
  shell: "ntpdate {{ ntp_servers[0] }} && hwclock -wu"
  ignore_errors: yes
  tags: time

- name: Install ntpd and utilities
  opkg:
    name: "{{ item }}"
    state: installed
  with_flattened:
    - ntp
    - ntp-utils
  tags: time

- name: /etc/ntp.conf
  template:
    src: ntp.conf.j2
    dest: /etc/ntp.conf
    mode: "0644"
    owner: root
    group: root
  tags: time
  notify: restart ntpd
    
  
#
#	Set root authorized keys
#
- name: Create root .ssh dir
  file:
    dest: ~root/.ssh
    state: directory
    mode: "0700"
    owner: root
    group: root
  tags: users

- name: Install root authorized keys
  copy:
    dest: ~root/.ssh/authorized_keys
    src: authorized_keys
    mode: "0600"
    owner: root
    group: root
  tags: users

#
#	Create ttn user
#
- name: "Set up {{ ttn_user }} user"
  user:
    name: "{{ ttn_user }}"
    append: yes
    groups: adm,plugdev,sudo
    shell: /bin/bash
    password: "*"
  tags: users

- name: Create {{ ttn_user }}  .ssh dir
  file:
    dest: "~{{ ttn_user }}/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ ttn_user }}"
    group: "{{ ttn_user }}"
  tags: users

- name: "Install {{ ttn_user }} authorized keys"
  copy:
    dest: "~{{ ttn_user }}/.ssh/authorized_keys"
    src: authorized_keys
    mode: "0600"
    owner: "{{ ttn_user }}"
    group: "{{ ttn_user }}"
  tags: users

#
#	Secure ssh
#

- name: Disallow password authentication
  lineinfile: dest=/etc/ssh/sshd_config
    regexp="^PasswordAuthentication"
    line="PasswordAuthentication no"
    state=present
  notify: Restart ssh
  tags: sshd

- name: Disallow root SSH access
  lineinfile: dest=/etc/ssh/sshd_config
    regexp="^PermitRootLogin"
    line="PermitRootLogin without-password"
    state=present
  notify: Restart ssh
  tags: sshd

#
#	Stop any services we don't want
#

- name: Stop mosquitto
  service: name=mosquitto state=stopped

- name: Disable mosquitto
  lineinfile: dest=/etc/default/mosquitto
    regexp="^ENABLED="
    line="ENABLED="no""
    state=present
  tags: services  

#
#	Move /usr/local to /var/config/local so it survives an upgrade
#
- name: Create /var/config/local
  file:
    name: /var/config/local
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: localtree

- name: /var/config/local/tree
  file:
    name: "/var/config/local/{{ item }}"
    state: directory
    mode: "0755"
    owner: root
    group: root
  with_flattened:
    - bin
    - lib
    - sbin
    - share
  tags: localtree

- name: Get stat info about /usr/local
  stat:
    path: /usr/local
  register: usr_local
  tags: localtree

- name: Copy /usr/local content to /var/config/local
  shell: "rsync -av /usr/local /var/config"
  when: usr_local.stat.isdir is defined and usr_local.stat.isdir == True
  tags: localtree

- name: Remove /usr/local tree
  file:
    name: /usr/local
    state: absent
  when: usr_local.stat.isdir is defined and usr_local.stat.isdir == True
  tags: localtree

- name: Point /usr/local at /var/config/local
  file:
    name: /usr/local
    state: link
    src: /var/config/local
  when: usr_local.stat.isdir is defined and usr_local.stat.isdir == True
  tags: localtree

#
#	Register gateway
#

- name: check if logged into TTN
  local_action:
    module: shell
    args: "bin/ttnctl user status"
  tags: loraconfig

- name: register non-TTN forwarder gateway
  local_action:
    module: shell
    args: "bin/register --id eui-{{ ansible_local.lora.eui }} --region {{ region }} --latitude {{ latitude }} --longitude {{ longitude }} --router {{ router }}"
  when: poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: loraconfig

- name: register TTN forwarder gateway
  local_action:
    module: shell
    args: "bin/register --id {{ hostname }} --region {{ region }} --latitude {{ latitude }} --longitude {{ longitude }} --router {{ router }}"
  when: poly_package | match("ttn-packet-forwarder_.*")
  tags: loraconfig

- name: get Gateway key
  local_action:
    module: shell
    args: "bin/ttnctl gateway info {{ hostname }} | awk '/Access Key/{print $3}'"
  register: gateway_key
  when: poly_package | match("ttn-packet-forwarder_.*")
  tags: loraconfig

# XXX - Fail if empty

#
#	Remove Multi-Tech stuff that we don't want and install the TTN packet-forwarder
#
- name: Remove Multi-Tech lora-network-server
  opkg:
    name: lora-network-server,lora-packet-forwarder
    state: absent
  tags: forwarder

#
#	Make sure we have package for correct version
#
- name: Get info on local copy of packet-forwarder package
  local_action: stat
  args:
    path: "{{ role_path }}/files/{{ poly_package }}"
  register: poly_package_stat
  tags: forwarder

- name: Download requested version of packet-forwarder
  local_action: get_url
  args:
    url: "{{ poly_url }}/{{poly_package}}"
    dest: "{{ role_path }}/files"
  when:
    - poly_package_stat.stat.exists == false
    - poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: forwarder

- name: Fetch and build ttn_packet_forwarder package
  local_action:
    module: shell
    args: "{{ role_path }}/files/build_packet_forwarder '{{ role_path }}/files/{{ poly_package }}'"
  when:
    - poly_package_stat.stat.exists == false
    - poly_package | match("ttn-packet-forwarder_.*")
  tags: forwarder

- name: Get name and version of packet-forwarder installed
  shell: "opkg list-installed | grep -E '(ttn|mp|poly)-packet-forwarder' | sed -e 's/ - /_/g'"
  register: poly_installed
  tags: forwarder

- name: Get name and version of packet-forwarder wanted
  local_action:
    module: shell
    args: "echo {{ poly_package }} | sed -e 's/_[a-z0-9]*.ipk//'"
  register: poly_wanted
  tags: forwarder

- name: Copy over packet-forwarder
  copy:
    src: "{{ poly_package }}"
    dest: "/var/tmp/{{ poly_package }}"
  when: poly_installed.stdout != poly_wanted.stdout
  tags: forwarder

- name: Stop packet-forwarder
  service: name=ttn-pkt-forwarder state=stopped
  when: poly_installed.stdout != poly_wanted.stdout
  ignore_errors: yes
  tags: forwarder

- name: Remove packet-forwarder
  shell: "opkg remove poly-packet-forwarder mp-packet-forwarder ttn-packet-forwarder"
  when: poly_installed.stdout != poly_wanted.stdout
  tags: forwarder

- name: Install packet-forwarder
  shell: "opkg install /var/tmp/{{ poly_package }}"
  when: poly_installed.stdout != poly_wanted.stdout
  notify: restart ttn-pkt-forwarder
  tags: forwarder

- name: Install /etc/init.d/ttn-pkt-forwarder
  copy:
    src: ttn-pkt-forwarder
    dest: /etc/init.d/
    mode: "0755"
    owner: root
    group: root
  notify:
    - update rc
    - restart ttn-pkt-forwarder
  tags: forwarder

- name: Remove old .ipk files
  shell: "rm -f /var/tmp/*-packet-forwarder_*.ipk"
  tags: forwarder

- name: Clean up poly-packet-forwarder crud
  file:
    name: /var/config/lora/local_conf.json-opkg
    state: absent
  tags: forwarder

#
#	Install the TTN config files
#
- name: Lora dir
  file:
    name: /var/config/lora
    mode: "0755"
    owner: root
    group: root
  tags: loraconfig

- name: /var/config/lora/local_conf.json
  template:
    src: local_conf.json.j2
    dest: /var/config/lora/local_conf.json
    mode: "0644"
    owner: root
    group: root
  when: poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: loraconfig

- name: Fetch appropriate global conf file
  local_action: get_url
  args:
    url: "https://raw.githubusercontent.com/TheThingsNetwork/gateway-conf/master/{{region }}-global_conf.json"
    dest: "{{ role_path }}/files"
  when: poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: loraconfig

- name: /var/config/lora/ttn_global_conf.json
  copy:
    src: "{{ region }}-global_conf.json"
    dest: /var/config/lora/ttn_global_conf.json
    mode: "0644"
    owner: root
    group: root
  when: poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: loraconfig

- name: Merge multitech_overrides in global_conf.json
  shell: node /opt/lora/merge.js /var/config/lora/ttn_global_conf.json /var/config/lora/multitech_overrides.json /var/config/lora/global_conf.json
  notify: restart ttn-pkt-forwarder
  when: poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: loraconfig

- name: Remove json files from non-TTN forwarder
  file:
    name: "{{ item }}"
    state: absent
  when: poly_package | match("ttn-packet-forwarder_.*")
  with_items:
    - global_conf.json
    - local_conf.json
    - ttn_global_conf.json
  tags: loraconfig
  
- name: Provide TTN packet forwarder config
  template:
    src: config.yml.j2
    dest: /var/config/lora/config.yml
    mode: "0644"
    owner: root
    group: root
  notify: restart ttn-pkt-forwarder
  when: poly_package | match("ttn-packet-forwarder_.*")
  tags: loraconfig

- name: Remove TTN packet forwarder config
  file:
    name: /var/config/lora/config.yml
    state: absent
  when: poly_package | match("(mp|poly)-packet-forwarder_.*")
  tags: loraconfig

#
#	Install additional ca-certificates
#	XXX - wget needs #	--ca-certificate=/etc/ssl/certs/ca-certificate.crt to work???
#
- name: Local certs directory
  file:
    dest: /usr/local/share/ca-certificates
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: ca-certificates

- name: "Fetch Let's Encrypt root cert"
  local_action: get_url
  args:
    url: "https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem"
    dest: "{{ role_path }}/files"
  tags: ca-certificates

- name: "Install Let's Encrypt root cert"
  copy:
    dest: /usr/local/share/ca-certificates/lets-encrypt-x3-cross-signed.crt
    src: "{{ item }}"
    mode: "0644"
    owner: root
    group: root
  with_flattened:
    - lets-encrypt-x3-cross-signed.pem
  notify: update-ca-certificates
  tags: ca-certificates

#
#	Set up ssh tunnel
#
- name: /etc/default/ssh_tunnel
  template:
    src: ssh_tunnel.j2
    dest: /etc/default/ssh_tunnel
    mode: "0755"
    owner: root
    group: root
  notify: restart ssh_tunnel
  when: 
    - ssh_tunnel_remote_port is defined
    - ssh_tunnel_remote_port > 0
  tags: ssh_tunnel

- name: /etc/init.d/ssh_tunnel
  copy:
    dest: /etc/init.d/ssh_tunnel
    src: ssh_tunnel.initd
    mode: "0755"
    owner: root
    group: root
  notify: restart ssh_tunnel
  when:
    - ssh_tunnel_remote_port is defined
    - ssh_tunnel_remote_port > 0
  tags: ssh_tunnel

  
  
